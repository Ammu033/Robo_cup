<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
    <group ns='head'>
        <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
            <param name="resolution" value="0.02" />
            
            <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
            <param name="frame_id" type="string" value="odom" />
            
            <!-- maximum range to integrate (speedup!) -->
            <param name="sensor_model/max_range" value="5.0" />
            
            <!-- data source to integrate (PointCloud2) -->
            <remap from="cloud_in" to="/head_filtered_points" />
            <!-- remap topics to not interfere with global octomap -->
            <!-- <remap from="octomap_binary" to="head_octomap_binary" />
            <remap from="octomap_full" to="head_octomap_full" />
            <remap from="occupied_cells_vis_array" to="head_occupied_cells_vis_array" />
            <remap from="octomap_point_cloud_centers" to="head_octomap_point_cloud_centers" />
            <remap from="projected_map" to="head_projected_map" /> -->
        </node>
    </group>
</launch>