---
session: stt_nlu
init_cmd: |
  #exec /bin/bash
  cd @TMULE_CONFIG_DIR@ || true
  set -o pipefail
  function export_default () {
    var_name="$1"
    var_default="$2"
    eval $var_name="${!var_name:-$var_default}"
    export $var_name
    echo "  $0 -> $var_name=${!var_name}"
  }
  

  ##############################################################################################
  # Source ROS
  export_default CATKIN_WORKSPACE "$HOME/catkin_ws"
  export_default USE_WHISPER true # true if you want to use speech recognition
  export_default CONDA_DIRECT "$HOME/anaconda3 || $HOME/miniconda3" # directory where conda or minicoda is installed 
  export_default CONDA_VIRT_ENV "lcastor_nlu2" # name of the virtual environment with the necessary packages
  source $CATKIN_WORKSPACE/devel/setup.bash
  #########################################################################################
  #Set up ROS MASTER AND ROS IP
  export_default ROS_IP "192.168.1.34" #laptop IP address
  export_default ROS_MASTER "192.168.1.89" #tiago IP address, as MASTER
  export ROS_MASTER_URI="http://$ROS_MASTER:11311/"
  export ROS_IP=$ROS_IP  
  
 
  #############################################################################################

windows:
- name: stt
  panes:
  - sleep 2; source $CONDA_DIRECT/etc/profile.d/conda.sh ; conda activate $CONDA_VIRT_ENV ; if $USE_WHISPER ; then roslaunch robocup_nlu stt.launch ; fi
#- name: nlu
#  panes:
#  - sleep 2; conda activate $CONDA_VIRT_ENV ; roscd robocup_nlu/rasa ; rasa run
#  - sleep 2; conda activate $CONDA_VIRT_ENV ; roscd robocup_nlu/rasa ; rasa run actions
#  - sleep 25 ; conda activate $CONDA_VIRT_ENV ; rosrun robocup_nlu rasa_ros_bridge.py 
#- name: tts
#  panes:
#  - sleep 5 ; rosrun robocup_nlu tiago_tts.py
- name: conversation
  panes:
  - rostopic echo /user_speech
  - rostopic echo /robot_speech
  - rostopic echo /rasa_confirmation
  - rostopic echo /planner_intention
#############################################################################################

